version: "2"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  api-pedidos:
    container_name: api-pedidos
    build:
      dockerfile: Dockerfile
      args:
        - APP_VERSION=api-pedidos-0.0.1-SNAPSHOT
    environment:
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=123456
      - DATABASE_HOST=db-pedidos
    depends_on:
      db-pedidos:
        condition: service_healthy
    image: api-pedidos:0.0.1
    ports:
      - 8081:8081
    volumes:
      - vol-maven:/root/.m2
    networks:
      - shared-network
    stdin_open: true
    tty: true
  db-pedidos:
    container_name: db-pedidos
    image: mysql:5.7
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    ports:
      - "3307:3306"
    expose:
      - "3306"
    volumes:
      - vol-db-pedidos:/var/lib/mysql
    networks:
      - shared-network
volumes:
  vol-db-pedidos:
    name: db-pedidos
  vol-maven:
    name: vol-maven
networks:
  shared-network:
    driver: bridge
    name: shared-network
